{"ast":null,"code":"var _jsxFileName = \"/Users/ahmetfurkanbicak/Desktop/week5-assignment-furkanbicak/src/components/DarkMode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../DarkMode.css\";\nimport SunIcon from \"../constans/SunIcon.png\";\nimport MonoIcon from \"../constans/MoonIcon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DarkMode = () => {\n  _s();\n\n  let clickedClass = \"clicked\";\n  const body = document.body;\n  const lightTheme = \"light\";\n  const darkTheme = \"dark\";\n  let theme;\n  const [status, setStatus] = useState(true);\n\n  if (localStorage) {\n    theme = localStorage.getItem(\"theme\");\n  }\n\n  if (theme === lightTheme || theme === darkTheme) {\n    body.classList.add(theme);\n  } else {\n    body.classList.add(lightTheme);\n  }\n\n  const switchTheme = props => {\n    if (theme === darkTheme) {\n      setStatus(true);\n      body.classList.replace(darkTheme, lightTheme);\n      props.target.classList.remove(clickedClass);\n      localStorage.setItem(\"theme\", \"light\");\n      theme = lightTheme;\n    } else {\n      setStatus(false);\n      body.classList.replace(lightTheme, darkTheme);\n      props.target.classList.remove(clickedClass);\n      localStorage.setItem(\"theme\", \"dark\");\n      theme = darkTheme;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: theme === \"dark\" ? clickedClass : \"\",\n    id: \"darkMode\",\n    onClick: props => switchTheme(props),\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: status ? MonoIcon : SunIcon,\n      alt: \"DarkLight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DarkMode, \"JX83Yt91lmbdp8qRj06BNJZeUo4=\");\n\n_c = DarkMode;\nexport default DarkMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"sources":["/Users/ahmetfurkanbicak/Desktop/week5-assignment-furkanbicak/src/components/DarkMode.js"],"names":["React","useState","SunIcon","MonoIcon","DarkMode","clickedClass","body","document","lightTheme","darkTheme","theme","status","setStatus","localStorage","getItem","classList","add","switchTheme","props","replace","target","remove","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,MAAIC,YAAY,GAAG,SAAnB;AACA,QAAMC,IAAI,GAAGC,QAAQ,CAACD,IAAtB;AACA,QAAME,UAAU,GAAG,OAAnB;AACA,QAAMC,SAAS,GAAG,MAAlB;AACA,MAAIC,KAAJ;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;;AAEA,MAAGY,YAAH,EAAgB;AACZH,IAAAA,KAAK,GAAGG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;AACH;;AAED,MAAGJ,KAAK,KAAKF,UAAV,IAAwBE,KAAK,KAAKD,SAArC,EAA+C;AAC3CH,IAAAA,IAAI,CAACS,SAAL,CAAeC,GAAf,CAAmBN,KAAnB;AACH,GAFD,MAEK;AACDJ,IAAAA,IAAI,CAACS,SAAL,CAAeC,GAAf,CAAmBR,UAAnB;AACH;;AAED,QAAMS,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAGR,KAAK,KAAKD,SAAb,EAAuB;AACnBG,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAN,MAAAA,IAAI,CAACS,SAAL,CAAeI,OAAf,CAAuBV,SAAvB,EAAkCD,UAAlC;AACAU,MAAAA,KAAK,CAACE,MAAN,CAAaL,SAAb,CAAuBM,MAAvB,CAA8BhB,YAA9B;AACAQ,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACAZ,MAAAA,KAAK,GAAGF,UAAR;AACH,KAND,MAMK;AACDI,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAN,MAAAA,IAAI,CAACS,SAAL,CAAeI,OAAf,CAAuBX,UAAvB,EAAmCC,SAAnC;AACAS,MAAAA,KAAK,CAACE,MAAN,CAAaL,SAAb,CAAuBM,MAAvB,CAA8BhB,YAA9B;AACAQ,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACAZ,MAAAA,KAAK,GAAGD,SAAR;AACH;AACJ,GAdD;;AAgBA,sBACI;AACI,IAAA,SAAS,EAAEC,KAAK,KAAK,MAAV,GAAmBL,YAAnB,GAAkC,EADjD;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,OAAO,EAAGa,KAAD,IAAWD,WAAW,CAACC,KAAD,CAHnC;AAAA,2BAKA;AAAK,MAAA,GAAG,EAAEP,MAAM,GAAGR,QAAH,GAAcD,OAA9B;AAAuC,MAAA,GAAG,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA7CD;;GAAME,Q;;KAAAA,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"../DarkMode.css\"\nimport SunIcon from \"../constans/SunIcon.png\"\nimport MonoIcon from \"../constans/MoonIcon.png\"\n\nconst DarkMode = () => {\n    let clickedClass = \"clicked\";\n    const body = document.body;\n    const lightTheme = \"light\";\n    const darkTheme = \"dark\";\n    let theme;\n\n    const [status, setStatus] = useState(true);\n    \n    if(localStorage){\n        theme = localStorage.getItem(\"theme\")\n    }\n\n    if(theme === lightTheme || theme === darkTheme){\n        body.classList.add(theme);\n    }else{\n        body.classList.add(lightTheme );\n    }\n    \n    const switchTheme = (props) => {\n        if(theme === darkTheme){\n            setStatus(true);\n            body.classList.replace(darkTheme, lightTheme);\n            props.target.classList.remove(clickedClass);\n            localStorage.setItem(\"theme\", \"light\");\n            theme = lightTheme; \n        }else{\n            setStatus(false)\n            body.classList.replace(lightTheme, darkTheme);\n            props.target.classList.remove(clickedClass);\n            localStorage.setItem(\"theme\", \"dark\");\n            theme = darkTheme; \n        }\n    }\n\n    return(\n        <button\n            className={theme === \"dark\" ? clickedClass : \"\"} \n            id=\"darkMode\"\n            onClick={(props) => switchTheme(props)}\n        >\n        <img src={status ? MonoIcon : SunIcon} alt=\"DarkLight\"/>\n        </button>\n        \n    );\n};\n\nexport default DarkMode;"]},"metadata":{},"sourceType":"module"}